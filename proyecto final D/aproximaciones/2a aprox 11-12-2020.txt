//controlador de interrupciones


#include <LPC17xx.H>
#include <string.h>
#include <stdio.h>

//char a=1, b=1, c=1;

       char interrupcion_0 =0;
       char interrupcion_1 =0;


//Función que inicializa las interrupciones
void inicioPINSEL()
{

//Configuración de los pines P2.10 a P2.12, como entradas de interrupción
 LPC_PINCON->PINSEL4 |= 1 << (12*2);   
 LPC_PINCON->PINSEL4 |= 1 << (11*2);   
 LPC_PINCON->PINSEL4 |= 1 << (10*2);   
 
	
	LPC_GPIO0->FIODIR = 0xFFFFD000; /*P0.0-P0.13 como ENTRADA  para sensor 1(0 a 6) y 2(7 a 13)*/
	
	LPC_GPIO2->FIODIR &= ~(1<<10); /* ISP definido como entrada */
	LPC_GPIO2->FIODIR &= ~(1<<11); /* Key_1 definido como entrada */
	LPC_GPIO2->FIODIR &= ~(1<<12); /* Key_2 definido como entrada */
	
//Configurar P1.00-P1.09 como salidas, del P1.00-P1.06 para los DISPLAYS y 0.7 y 0.8 para A0 y A1
	  LPC_GPIO1->FIODIR = 0x000000FF;
		 
	
	  //******** RESISTENCIAS PULL-UP
	
	// siempre que x sea 0 a 15, en este caso sería  x=5 , 7,   9 . 
LPC_PINCON->PINSEL0 &= ~(0x3 << 5); // Función GPIO
LPC_PINCON->PINMODE0 &= ~(0x3 << 5); // Resistencia pull-up
LPC_GPIO0->FIODIR &= ~(0x1 << 5); // bit P0.5 definido como entrada
	
LPC_PINCON->PINSEL0 &= ~(0x3 << 7); // Función GPIO
LPC_PINCON->PINMODE0 &= ~(0x3 << 7); // Resistencia pull-up
LPC_GPIO0->FIODIR &= ~(0x1 << 7); // bit P0.7 definido como entrada

LPC_PINCON->PINSEL0 &= ~(0x3 << 9); // Función GPIO
LPC_PINCON->PINMODE0 &= ~(0x3 << 9); // Resistencia pull-up
LPC_GPIO0->FIODIR &= ~(0x1 << 9); // bit P0.9 definido como entrada
	  //********
}

void inicioIRQs()
{
	
//Asignación de prioridades
  NVIC_SetPriorityGrouping(5);
  NVIC_SetPriority(EINT0_IRQn, 0x04);
  NVIC_SetPriority(EINT1_IRQn, 0x06);
  NVIC_SetPriority(EINT2_IRQn, 0x02);

//Habilitación de las interrupciones
  NVIC_EnableIRQ(EINT0_IRQn);
  NVIC_EnableIRQ(EINT1_IRQn);
  NVIC_EnableIRQ(EINT2_IRQn);
}

//ISR de las interrupciones
void EINT0_IRQHandler(){ 
				LPC_SC->EXTINT |= (1);   // Borrar el flag de la EINT0 --> EXTINT.0
	      LPC_GPIO0->FIOSET = 0x00000100;     // Activo el P0.04
				LPC_GPIO0->FIOCLR = 0x00000040;     // Activo el P0.06
	
				interrupcion_0 ++;
				//printf("Interrupciones 0: %d\n",interrupcion_0);
				//LPC_GPIO0->FIOCLR = 0x00000010;     // Desactivo el P0.04
				
}

void EINT1_IRQHandler()
{
	LPC_SC->EXTINT |= (1 << 1);   // Borrar el flag de la EINT1 --> EXTINT.1	
	      LPC_GPIO0->FIOSET = 0x00000040;     // Activo el P0.06
			
				LPC_GPIO0->FIOCLR = 0x000000100;     // Desactivo el P0.06
			interrupcion_1 ++;
			//printf("Interrupciones 1: %d\n",interrupcion_1);
	}

void EINT2_IRQHandler()
{
			
				//LPC_SC->EXTINT |= (1 << 2);   // Borrar el flag de la EINT2 --> EXTINT.2	
				//LPC_GPIO0->FIOSET = 0x00000100;     // Activo el P0.08
				//while((LPC_GPIO0->FIOPIN & (1<<9)) != 0);
				//LPC_GPIO0->FIOCLR = 0x00000100;     // Desactivo el P0.08
			
}

//Programa principal
int main (void)
{
  inicioPINSEL();

  inicioIRQs();

  while(1){		
					
  }	
		
 }

	//do{
	
//	}while((LPC_GPIO0->FIOPIN & 0x03));
